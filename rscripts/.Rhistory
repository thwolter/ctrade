source('~/Code/ctrade/rscripts/sources.R')
source('~/Code/ctrade/rscripts/script.R')
install.packages('optparse')
source('~/Code/ctrade/rscripts/script.R')
?setwd
source('~/Code/ctrade/rscripts/sources.R')
pfolio <- rcportfolio('Example Portfolio', 'USD')
source('~/Code/ctrade/rscripts/classes/rc_portfolio_class.R')
pfolio <- rcportfolio('Example Portfolio', 'USD')
source('~/Code/ctrade/rscripts/sources.R')
source('~/Code/ctrade/rscripts/sources.R')
pfolio <- rcportfolio('Example Portfolio', 'USD')
dat <- jsonlite::fromJSON(filename)
dat <- jsonlite::fromJSON('1.json')
dat
dat$meta$name
dat$item
dim(dat$item)
dim(dat$item)[1]
source('~/Code/ctrade/rscripts/classes/rc_portfolio_class.R')
source('~/Code/ctrade/rscripts/classes/all_generics.R')
source('~/Code/ctrade/rscripts/classes/rc_portfolio_class.R')
readJSON('1.json')
dat
item <- dat$item
item <- dat$item[1]
item
dat#
dat$item
str(dat$item)
dat$cash
as.data.frame(dat$cash)
item <- dat$item
items <- dat$item
items
items[1,]
item <-items[1,]
item$symbol
source('~/Code/ctrade/rscripts/classes/rc_portfolio_class.R')
items
dim(items)
source('~/Code/ctrade/rscripts/classes/rc_portfolio_class.R')
source('~/Code/ctrade/rscripts/classes/all_generics.R')
source('~/Code/ctrade/rscripts/classes/rc_portfolio_class.R')
setGeneric("item", function(object, i) standardGeneric("item"))
source('~/Code/ctrade/rscripts/classes/rc_portfolio_class.R')
readJSON('1.json')
?switch
source('~/Code/ctrade/rscripts/classes/rc_portfolio_class.R')
readJSON('1.json')
$portfolio <- readJSON('1.json')
portfolio <- readJSON('1.json')
portfolio
source('~/Code/ctrade/rscripts/classes/rc_portfolio_class.R')
readJSON('1.json')
$pfolio <- readJSON('1.json')
pfolio <- readJSON('1.json')
risk(pfolio)
risk.weigths(pfolio)
pfolio <- pushPrices(pfolio)
loadData(pfolio)
loadData(pfolio)
loadData(pfolio, TRUE)
loadData(pfolio, TRUE)
pfolio
loadData(pfolio, TRUE)
loadData()
loadData
loadData(pfolio)
source('~/Code/ctrade/rscripts/classes/rc_portfolio_class.R')
loadData(pfolio)
rfs
loadData(pfolio)
src
src
rf
source('~/Code/ctrade/rscripts/classes/rc_portfolio_class.R')
source('~/Code/ctrade/rscripts/classes/rc_portfolio_class.R')
source('~/Code/ctrade/rscripts/classes/rc_portfolio_class.R')
loadData(pfolio)
w
nm <- unique(w)
nm
nm <- gsub('CURRENCY', currency(object), nm)
nm
w
paste('CURRENCY/', currency(object))
paste('CURRENCY', currency(object), sep="/")
which(nm == paste('CURRENCY', currency(object), sep="/"))
el <- paste('CURRENCY', currency(object), sep="/")
el
nm
el <- paste(currency(object), currency(object), sep="/")
el
nm==el
nm[nm!=el]
source('~/Code/ctrade/rscripts/classes/rc_portfolio_class.R')
risk.factors(pfolio)
loadData(pfolio)
source('~/Code/ctrade/rscripts/classes/rc_portfolio_class.R')
loadData(pfolio)
rfs
rf
getSymbol("USD/EUR")
getSymbols("USD/EUR")
getSymbols("USD/EUR", src=src)
getSymbols("USDEUR", src=src)
getSymbols("USDEUR")
getSymbols("EURUSD")
q
install.packages(c("assertthat", "boot", "cluster", "commonmark", "curl", "data.table", "glue", "googleAuthR", "jsonlite", "lattice", "lme4", "markdown", "MASS", "Matrix", "memoise", "mgcv", "nlme", "pbkrtest", "quantmod", "quantreg", "Rcpp", "RcppEigen", "readxl", "rmarkdown", "RMySQL", "rpart", "shiny", "sourcetools", "SparseM", "stringi", "stringr", "survival", "tibble", "V8", "viridis", "XML", "zoo"))
install.packages(c("assertthat", "boot", "cluster", "commonmark", "curl", "data.table", "glue", "googleAuthR", "jsonlite", "lattice", "lme4", "markdown", "MASS", "Matrix", "memoise", "mgcv", "nlme", "pbkrtest", "quantmod", "quantreg", "Rcpp", "RcppEigen", "readxl", "rmarkdown", "RMySQL", "rpart", "shiny", "sourcetools", "SparseM", "stringi", "stringr", "survival", "tibble", "V8", "viridis", "XML", "zoo"))
install.packages(c("assertthat", "boot", "cluster", "commonmark", "curl", "data.table", "glue", "googleAuthR", "jsonlite", "lattice", "lme4", "markdown", "MASS", "Matrix", "memoise", "mgcv", "nlme", "pbkrtest", "quantmod", "quantreg", "Rcpp", "RcppEigen", "readxl", "rmarkdown", "RMySQL", "rpart", "shiny", "sourcetools", "SparseM", "stringi", "stringr", "survival", "tibble", "V8", "viridis", "XML", "zoo"))
install.packages("quantmod")
install.packages("quantmod")
loadData(pfolio)
loadData(pfolio)
library(quantmod)
source('~/Code/ctrade/rscripts/sources.R')
pfolio <- readJSON('1.json')
loadData(pfolio)
getSymbols(rf, env = NULL, src = src)
source('~/Code/ctrade/rscripts/classes/rc_portfolio_class.R')
loadData(pfolio)
is.complete(pfolio)
risk(pfolio)
risk.weigths(pfolio)
tsdata(pfolio)
source('~/Code/ctrade/rscripts/sources.R')
tsdata(pfolio)
pfolio <- loadData(pfolio)
risk(pfolio)
jsonlite::write_json(risk(pfolio), "out.jsno")
